{"filter":false,"title":"slot.rb","tooltip":"/slot.rb","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":132,"column":3},"action":"insert","lines":["require 'io/console'","# 端末上の入出力を制御する機能を IO に追加","# 基本的な入出力機能のクラス","def slot_start()","    puts (\"メダルを入れてください\")","    puts (\"1(1メダル) 2(5メダル) 3(10メダル) 4(退出)\")","    bet = gets.chomp.to_i","    ","    if bet == 1","        bet_coin = 1","    elsif bet == 2","        bet_coin = 5","    elsif bet == 3","        bet_coin = 10","    elsif bet == 4","        puts (\"終了します\")","        exit","        #プログラムを終了","    end","    ","    return bet, bet_coin","end","","def slot_reel()","    number1 = Random.rand(1..9)","    number2 = Random.rand(1..9)","    number3 = Random.rand(1..9)","    return number1, number2, number3","end","#-----------------------------------","def per_slot(place, number, coin, bet_coin)","    puts (\"当たり\")","    puts (\"#{place}に#{number}が揃いました\")","    coin += bet_coin * 5","    puts (\"#{bet_coin * 3}枚のメダルを獲得しました\")","    per = true","    return coin, per","end","#-----------------------------------","coin = 100","per = false","game_again = 1","puts (\"メダル残高#{coin}\")","","while game_again == 1","    bet_coin = 0","    ","    bet, bet_coin = slot_start()","    #--------------再入力処理--------------","    while bet == 0 || bet >= 5 || coin < bet_coin","        if bet == 0 || bet >= 5","            puts (\"1から４の数値を選択してください\")","        else","            puts (\"#{coin}枚のメダルを所持\")","            puts (\"メダルが不足しています\")","        end","        bet, bet_coin = slot_start()","    end","    #----------------------------------","    ","    #-------------メダル減算-----------","    coin -= bet_coin","    puts (\"-------------\")","    puts (\"Enterを３回押してください\")","    #----------------------------------","    ","    #----------スロット本体------------","    slot_top =[0, 0, 0]","    slot_center =[0, 0, 0]","    slot_bottom =[0, 0, 0]","    #----------------------------------","    ","    #--------スロットを押す処理--------","    for i in 1..3 do","        key = STDIN.getch","        while key != \"\\r\"","            puts (\"Enterを押してください\")","            key = STDIN.getch","    end","    if (key == \"\\r\")","        slot_top[i-1], slot_center[i-1], slot_bottom[i-1] = slot_reel()","    #----------------------------------","    ","     #---スロットにランダムで値を入力---","    if i == 1","         puts (\"|#{slot_top[0]}| | |\")","         puts (\"|#{slot_center[0]}| | |\")","         puts (\"|#{slot_bottom[0]}| | |\")","    elsif i == 2 ","         puts (\"|#{slot_top[0]}|#{slot_top[1]} | |\")","         puts (\"|#{slot_center[0]}|#{slot_center[1]} | |\")","         puts (\"|#{slot_bottom[0]}|#{slot_bottom[1]} | |\")","    elsif i == 3","         puts (\"|#{slot_top[0]}|#{slot_top[1]}|#{slot_top[2]}|\")","         puts (\"|#{slot_center[0]}|#{slot_center[1]}|#{slot_center[2]}|\")","         puts (\"|#{slot_bottom[0]}|#{slot_bottom[1]}|#{slot_bottom[2]}|\")","    end","    puts (\"-------------\")","  end","end","","#揃った時の処理","if [slot_top[0], slot_top[1], slot_top[2]].uniq.count == 1","    coin, point, per = per_slot(\"上段\", slot_top[0], coin, bet_coin, point)","end","if [slot_center[0], slot_center[1], slot_center[2]].uniq.count == 1","    coin, point, per = per_slot(\"中段\", slot_center[0], coin, bet_coin, point)","end","if [slot_bottom[0], slot_bottom[1], slot_bottom[2]].uniq.count == 1","    coin, point, per = per_slot(\"下段\", slot_bottom[0], coin, bet_coin, point)","end","","","#外れた時の処理","if per == false","    puts (\"ハズレ\")","    if coin < 1","        puts (\"現在#{coin}枚のメダルを所持しています\")","        puts (\"メダルが無くなりました\")","        puts (\"終了します\")","        exit","        end","    end","    ","    puts (\"メダル残高#{coin}\")","    puts (\"-------------\")","    puts (\"もう一度実行しますか\")","    puts (\"1(はい) 2(いいえ)\")","    game_again = gets.chomp.to_i","    if game_again != 1","        puts (\"またどうぞ\")","    end","end"],"id":1}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"remove","lines":["3"],"id":2}],[{"start":{"row":34,"column":24},"end":{"row":34,"column":25},"action":"insert","lines":["5"],"id":3}],[{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"remove","lines":["t"],"id":4},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"remove","lines":["n"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"remove","lines":["i"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"remove","lines":["o"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"remove","lines":["p"]},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"remove","lines":[" "]},{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"remove","lines":[","]}],[{"start":{"row":106,"column":14},"end":{"row":106,"column":15},"action":"remove","lines":["t"],"id":5},{"start":{"row":106,"column":13},"end":{"row":106,"column":14},"action":"remove","lines":["n"]},{"start":{"row":106,"column":12},"end":{"row":106,"column":13},"action":"remove","lines":["i"]},{"start":{"row":106,"column":11},"end":{"row":106,"column":12},"action":"remove","lines":["o"]},{"start":{"row":106,"column":10},"end":{"row":106,"column":11},"action":"remove","lines":["p"]},{"start":{"row":106,"column":9},"end":{"row":106,"column":10},"action":"remove","lines":[" "]},{"start":{"row":106,"column":8},"end":{"row":106,"column":9},"action":"remove","lines":[","]}],[{"start":{"row":106,"column":67},"end":{"row":106,"column":68},"action":"remove","lines":["t"],"id":6},{"start":{"row":106,"column":66},"end":{"row":106,"column":67},"action":"remove","lines":["n"]},{"start":{"row":106,"column":65},"end":{"row":106,"column":66},"action":"remove","lines":["i"]},{"start":{"row":106,"column":64},"end":{"row":106,"column":65},"action":"remove","lines":["o"]},{"start":{"row":106,"column":63},"end":{"row":106,"column":64},"action":"remove","lines":["p"]},{"start":{"row":106,"column":62},"end":{"row":106,"column":63},"action":"remove","lines":[" "]},{"start":{"row":106,"column":61},"end":{"row":106,"column":62},"action":"remove","lines":[","]}],[{"start":{"row":103,"column":71},"end":{"row":103,"column":72},"action":"remove","lines":["t"],"id":7},{"start":{"row":103,"column":70},"end":{"row":103,"column":71},"action":"remove","lines":["n"]},{"start":{"row":103,"column":69},"end":{"row":103,"column":70},"action":"remove","lines":["i"]},{"start":{"row":103,"column":68},"end":{"row":103,"column":69},"action":"remove","lines":["o"]},{"start":{"row":103,"column":67},"end":{"row":103,"column":68},"action":"remove","lines":["p"]},{"start":{"row":103,"column":66},"end":{"row":103,"column":67},"action":"remove","lines":[" "]},{"start":{"row":103,"column":65},"end":{"row":103,"column":66},"action":"remove","lines":[","]}],[{"start":{"row":109,"column":67},"end":{"row":109,"column":68},"action":"remove","lines":["t"],"id":8},{"start":{"row":109,"column":66},"end":{"row":109,"column":67},"action":"remove","lines":["n"]},{"start":{"row":109,"column":65},"end":{"row":109,"column":66},"action":"remove","lines":["i"]},{"start":{"row":109,"column":64},"end":{"row":109,"column":65},"action":"remove","lines":["o"]},{"start":{"row":109,"column":63},"end":{"row":109,"column":64},"action":"remove","lines":["p"]},{"start":{"row":109,"column":62},"end":{"row":109,"column":63},"action":"remove","lines":[" "]},{"start":{"row":109,"column":61},"end":{"row":109,"column":62},"action":"remove","lines":[","]}]]},"ace":{"folds":[],"scrolltop":339,"scrollleft":42,"selection":{"start":{"row":109,"column":61},"end":{"row":109,"column":61},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1617002453458,"hash":"6748ff62a976f9e792492a4f9c50ed25503ab5e2"}